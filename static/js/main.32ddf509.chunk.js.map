{"version":3,"sources":["utils/theme.js","components/Section/Section.styled.js","components/Section/Section.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","services/contacts.js","App.js","index.js"],"names":["theme","Object","freeze","colors","white","BorderColor","InputColor","ButtonColor","animation","time","SectionWrapper","styled","section","SectionTitle","h2","Section","title","children","InputWrapper","div","Input","input","props","FormButton","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","uuidv4","numberInputId","handleChangeName","event","currentTarget","value","reset","preventDefault","newContact","id","htmlFor","type","pattern","required","onChange","ContactsList","ul","ContactsListItem","li","ContactsListButton","ContactsListName","p","ContactList","contacts","onDeleteContact","map","onClick","ContactListWrapper","ContactListInput","Filter","contactsList","App","setContacts","filter","setFilter","useEffect","contactsLocal","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","find","contact","alert","normalizeFilter","toLowerCase","includes","getVisibleContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32ddf509.chunk.js","sourcesContent":["export const theme = Object.freeze({\n  colors: {\n    white: \"#ffffff\",\n    BorderColor: \"rgb(255, 222, 173)\",\n    InputColor: \"rgba(255, 248, 220, 0.5)\",\n    ButtonColor: \"rgb(255, 248, 220)\",\n  },\n  animation: \"250ms\",\n  time: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n});\n","import styled from \"@emotion/styled\";\n\nexport const SectionWrapper = styled.section`\n  margin-left: 30px;\n  margin-top: 20px;\n  font-weight: 700;\n`;\nexport const SectionTitle = styled.h2`\n  margin: 0px;\n  margin-bottom: 8px;\n  font-weight: 700;\n  font-size: 28px;\n`;\n","import PropTypes from \"prop-types\";\nimport { SectionWrapper, SectionTitle } from \"./Section.styled\";\n\nexport function Section({ title, children }) {\n  return (\n    <SectionWrapper>\n      {title && <SectionTitle>{title}</SectionTitle>}\n      {children}\n    </SectionWrapper>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n","import styled from \"@emotion/styled\";\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 700;\n  font-size: 18px;\n`;\nexport const Input = styled.input`\n  width: 200px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  padding: 5px;\n  font: inherit;\n  font-size: 18px;\n  border-radius: 4px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.InputColor};\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1);\n  }\n`;\nexport const FormButton = styled.button`\n  margin: 0;\n  margin-top: 5px;\n  padding: 5px 10px;\n  font: inherit;\n  border-radius: 4px;\n  font-weight: 700;\n  font-size: 18px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.ButtonColor};\n  cursor: pointer;\n  transition: ${(props) =>\n      `transform${props.theme.animation} ${props.theme.time}`},\n    ${(props) => `box-shadow${props.theme.animation} ${props.theme.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1.1);\n  }\n`;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { InputWrapper, Input, FormButton } from \"./ContactForm.styled\";\n\nexport function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleChangeName = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newContact = { id: uuidv4(), name, number };\n    onSubmit(newContact);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputWrapper>\n        <label htmlFor={nameInputId}>Name</label>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </InputWrapper>\n      <InputWrapper>\n        <label htmlFor={numberInputId}>Number</label>\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeName}\n        />\n      </InputWrapper>\n      <FormButton type=\"submit\">Add contact</FormButton>\n    </form>\n  );\n}\n","import styled from \"@emotion/styled\";\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\nexport const ContactsListItem = styled.li`\n  display: flex;\n  align-items: baseline;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const ContactsListButton = styled.button`\n  margin: 0;\n  margin-left: 8px;\n  padding: 3px;\n  width: 80px;\n  font: inherit;\n  border-radius: 4px;\n  font-weight: 600;\n  font-size: 18px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.ButtonColor};\n  cursor: pointer;\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1.1);\n  }\n`;\nexport const ContactsListName = styled.p`\n  margin: 0;\n  font-weight: 600;\n  font-size: 18px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ContactsList,\n  ContactsListItem,\n  ContactsListButton,\n  ContactsListName,\n} from \"./ContactList.styled\";\n\nexport function ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ContactsList>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <ContactsListItem key={id} id={id}>\n            <ContactsListName>\n              {name}: {number}\n            </ContactsListName>\n            <ContactsListButton onClick={() => onDeleteContact(id)}>\n              Delete\n            </ContactsListButton>\n          </ContactsListItem>\n        );\n      })}\n    </ContactsList>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ContactListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-weight: 600;\n  font-size: 18px;\n`;\nexport const ContactListInput = styled.input`\n  width: 200px;\n  margin: 0;\n  margin-top: 4px;\n  padding: 5px;\n  font: inherit;\n  font-size: 18px;\n  border-radius: 4px;\n  border: ${(props) => `3px solid ${props.theme.colors.BorderColor}`};\n  background-color: ${(props) => props.theme.colors.InputColor};\n  transition: ${(props) =>\n      `transform${props.theme.colors.animation} ${props.theme.colors.time}`},\n    ${(props) =>\n      `box-shadow${props.theme.colors.animation} ${props.theme.colors.time}`};\n  &:hover,\n  &:focus {\n    box-shadow: ${(props) => `0 0 10px${props.theme.colors.white}`};\n    transform: scale(1);\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ContactListWrapper, ContactListInput } from \"./Filter.styled\";\n\nexport function Filter({ value, onChange }) {\n  return (\n    <ContactListWrapper>\n      <label>Find contacts by name</label>\n      <ContactListInput type=\"text\" value={value} onChange={onChange} />\n    </ContactListWrapper>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","export const contactsList = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n","import React, { useState, useEffect } from \"react\";\nimport { Section } from \"./components/Section\";\nimport { ContactForm } from \"./components/ContactForm\";\nimport { ContactList } from \"./components/ContactList\";\nimport { Filter } from \"./components/Filter\";\nimport { contactsList } from \"./services/contacts\";\n\nexport function App() {\n  const [contacts, setContacts] = useState(contactsList);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const contactsLocal = localStorage.getItem(\"contactsLocal\");\n    const parsedContacts = JSON.parse(contactsLocal);\n\n    setContacts(parsedContacts ?? contactsList);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contactsLocal\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    const filteredContact = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    filteredContact\n      ? alert(`${newContact.name}is already in contacts`)\n      : setContacts([newContact, ...contacts]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((contacts) =>\n      contacts.filter((contact) => contact.id !== contactId)\n    );\n  };\n\n  const changeFilter = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContact = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={addContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n\n        <ContactList\n          contacts={getVisibleContact()}\n          onDeleteContact={deleteContact}\n        />\n      </Section>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"@emotion/react\";\nimport { theme } from \"./utils/theme\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}